name: Clojure CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: lein deps

    - name: Run tests
      run: lein test

  build-and-push:
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: brunoporto2702/web-simple:latest

  deploy:
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install awscli -y

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::533267342896:role/GithubDeploy
        role-session-name: DestroyWebSimple

    - name: Send SSM Command to Instances by Tag
      run: |
        aws ssm send-command --document-name "AWS-RunShellScript" \
                             --targets Key=tag:app,Values="web-simple" \
                             --parameters '{"commands":["#!/bin/bash", "cd /home/ec2-user", "git clone https://github.com/Brunoporto2702/web-simple.git", "cd web-simple", "sudo git pull", "sudo docker-compose up -d"]}' \
                             --comment "Update repository and deploy using Docker Compose"
